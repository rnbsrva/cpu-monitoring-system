version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    networks:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - monitoring
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
  node-1:
    build:
      context: noad-monitoring-system
    ports:
      - "8080:8080"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: "1.0"       # Limit to 1 CPU core
          memory: 512M       # Limit to 512 MB of RAM
        reservations:
          cpus: "0.5"       # Reserve 0.5 CPU cores
          memory: 256M
  node-2:
    build:
      context: noad-monitoring-system
    ports:
      - "8081:8081"
    networks:
      - monitoring
    environment:
      'server.port': 8081
    deploy:
      resources:
        limits:
          cpus: "1.0"       # Limit to 1 CPU core
          memory: 512M       # Limit to 512 MB of RAM
        reservations:
          cpus: "0.5"       # Reserve 0.5 CPU cores
          memory: 256M
  node-3:
    build:
      context: noad-monitoring-system
    networks:
      - monitoring
    environment:
      'server.port': 8082
    ports:
      - "8082:8082"
    deploy:
      resources:
        limits:
          cpus: "1.0"       # Limit to 1 CPU core
          memory: 512M       # Limit to 512 MB of RAM
        reservations:
          cpus: "0.5"       # Reserve 0.5 CPU cores
          memory: 256M

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - monitoring

volumes:
  grafana-data:

networks:
  monitoring: